{"version":3,"sources":["components/ContactsList/ContactItem/ContactItem.module.css","components/MainContainer/MainContainer.module.css","components/Title/Title.module.css","components/ContactsList/ContactsList.module.css","components/ContactsFilter/ContactsFilter.module.css","components/MainContainer/MainContainer.jsx","components/Title/Title.jsx","redux/phonebook/contactsSelectors.js","redux/phonebook/contactsActions.js","components/Form/Form.jsx","components/ContactsList/ContactItem/ContactItem.jsx","components/ContactsList/ContactsList.jsx","components/ContactsFilter/ContactsFilter.jsx","App.js","redux/phonebook/constactsReducer.js","redux/store.js","index.js","components/Form/Form.module.css"],"names":["module","exports","MainContainer","children","className","s","mainContainer","Title","text","title","getItems","state","contacts","items","getFilter","filter","getFilteredContacts","name","toLowerCase","includes","actions","addContact","createAction","number","payload","id","shortid","generate","deleteContact","changeFilter","Form","useState","setName","setNumber","useSelector","dispatch","useDispatch","nameInputId","numberInputId","handleChange","e","currentTarget","value","resetInput","form","onSubmit","preventDefault","console","log","find","contact","alert","htmlFor","type","pattern","required","onChange","input","button","ContactsItem","onDeleteContact","item","item__button","onClick","ContactsList","list","map","ContactsFilter","filter__label","target","App","createReducer","_","combineReducers","contactsPersistConfig","key","storage","blacklist","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","persistReducer","contactsReducer","provider","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.214e0bd1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactItem_item__fmrXC\",\"item__button\":\"ContactItem_item__button__3yz1r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainContainer\":\"MainContainer_mainContainer__2cB5m\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Title_title__2-oKl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactsList_list__FRup2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter__label\":\"ContactsFilter_filter__label__I_6QP\"};","import s from '../MainContainer/MainContainer.module.css';\r\n\r\nconst MainContainer = ({ children }) => (\r\n  <div className={s.mainContainer}>{children}</div>\r\n);\r\n\r\nexport default MainContainer;\r\n","import s from '../Title/Title.module.css';\r\n\r\nconst Title = ({ text }) => <h2 className={s.title}>{text}</h2>;\r\n\r\nexport default Title;\r\n","export const getItems = state => state.contacts.items;\nexport const getFilter = state => state.contacts.filter;\n\nexport const getFilteredContacts = state => {\n  const items = getItems(state);\n  const filter = getFilter(state);\n\n  return items.filter(({ name }) =>\n    name.toLowerCase().includes(filter.toLowerCase()),\n  );\n};\n","import shortid from 'shortid';\nimport { createAction } from '@reduxjs/toolkit';\n\nconst addContact = createAction('contacts/add', (name, number) => {\n  return {\n    payload: {\n      id: shortid.generate(),\n      name,\n      number,\n    },\n  };\n});\nconst deleteContact = createAction('contacts/delete');\nconst changeFilter = createAction('contacts/change_filter');\n\nconst actions = { addContact, deleteContact, changeFilter };\n\nexport default actions;\n","import { useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport shortid from 'shortid';\r\n\r\nimport { getItems } from '../../redux/phonebook/contactsSelectors';\r\n\r\nimport actions from '../../redux/phonebook/contactsActions';\r\n\r\nimport s from '../Form/Form.module.css';\r\n\r\nfunction Form() {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n  const contacts = useSelector(getItems);\r\n  const dispatch = useDispatch();\r\n\r\n  const nameInputId = shortid.generate();\r\n  const numberInputId = shortid.generate();\r\n\r\n  const handleChange = e => {\r\n    const { value, name } = e.currentTarget;\r\n\r\n    name === 'name' ? setName(value) : setNumber(value);\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    console.log(contacts);\r\n\r\n    const isRepeatName = contacts.find(\r\n      contact => contact.name.toLowerCase() === name.toLowerCase(),\r\n    );\r\n    if (isRepeatName) {\r\n      alert(`${name} is already in contacts`);\r\n      return [...contacts];\r\n    }\r\n    dispatch(actions.addContact(name, number));\r\n    resetInput();\r\n  };\r\n\r\n  const resetInput = () => {\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  return (\r\n    <form className={s.form} onSubmit={handleSubmit}>\r\n      <label htmlFor={nameInputId}>\r\n        Name\r\n        <input\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={name}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n          required\r\n          onChange={handleChange}\r\n          id={nameInputId}\r\n          className={s.input}\r\n        />\r\n      </label>\r\n\r\n      <label htmlFor={numberInputId}>\r\n        Number\r\n        <input\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          value={number}\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n          required\r\n          onChange={handleChange}\r\n          id={numberInputId}\r\n          className={s.input}\r\n        />\r\n      </label>\r\n      <button className={s.button} type=\"submit\">\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default Form;\r\n","import PropTypes from 'prop-types';\r\nimport s from '../ContactItem/ContactItem.module.css';\r\n\r\nconst ContactsItem = ({ name, number, id, onDeleteContact }) => (\r\n  <li className={s.item}>\r\n    <span>{name}: </span>\r\n    <span>{number} </span>\r\n    <span>\r\n      <button\r\n        className={s.item__button}\r\n        type=\"button\"\r\n        onClick={() => onDeleteContact(id)}\r\n      >\r\n        Delete\r\n      </button>\r\n    </span>\r\n  </li>\r\n);\r\n\r\nContactsItem.propTypes = {\r\n  name: PropTypes.string,\r\n  number: PropTypes.string,\r\n  id: PropTypes.string,\r\n  onDeleteContact: PropTypes.func,\r\n};\r\n\r\nexport default ContactsItem;\r\n","import { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport ContactsItem from './ContactItem/ContactItem';\r\nimport actions from '../../redux/phonebook/contactsActions';\r\nimport { getFilteredContacts } from '../../redux/phonebook/contactsSelectors';\r\n\r\nimport s from '../ContactsList/ContactsList.module.css';\r\n\r\nconst ContactsList = () => {\r\n  const contacts = useSelector(getFilteredContacts);\r\n  const dispatch = useDispatch();\r\n\r\n  const onDeleteContact = id => dispatch(actions.deleteContact(id));\r\n\r\n  return (\r\n    <ul className={s.list}>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <ContactsItem\r\n          key={id}\r\n          id={id}\r\n          name={name}\r\n          number={number}\r\n          onDeleteContact={() => onDeleteContact(id)}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ContactsList;\r\n","import { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport { getFilter } from '../../redux/phonebook/contactsSelectors';\r\nimport actions from '../../redux/phonebook/contactsActions';\r\n\r\nimport s from '../ContactsFilter/ContactsFilter.module.css';\r\n\r\nconst ContactsFilter = () => {\r\n  const value = useSelector(getFilter);\r\n  const dispatch = useDispatch();\r\n\r\n  const onChange = e => dispatch(actions.changeFilter(e.target.value));\r\n\r\n  return (\r\n    <label className={s.filter__label}>\r\n      Find contacts by name\r\n      <input\r\n        type=\"text\"\r\n        value={value}\r\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n        onChange={onChange}\r\n      />\r\n    </label>\r\n  );\r\n};\r\n\r\nexport default ContactsFilter;\r\n","import MainContainer from './components/MainContainer/MainContainer';\nimport Title from './components/Title/Title';\nimport Form from './components/Form/Form';\nimport ContactsList from './components/ContactsList/ContactsList';\nimport ContactsFilter from './components/ContactsFilter/ContactsFilter';\n\nfunction App() {\n  return (\n    <MainContainer>\n      <Title text=\"Phonebook\" />\n      <Form />\n\n      <Title text=\"Contacts\" />\n      <ContactsFilter />\n      <ContactsList />\n    </MainContainer>\n  );\n}\n\nexport default App;\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport actions from './contactsActions';\n\nconst contactsList = [\n  { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n  { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n  { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n  { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n];\n\nconst items = createReducer(contactsList, {\n  [actions.addContact]: (state, { payload }) => [...state, payload],\n  [actions.deleteContact]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst filter = createReducer('', {\n  [actions.changeFilter]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n});\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport contactsReducer from './phonebook/constactsReducer';\n\nconst contactsPersistConfig = {\n  key: 'contacts',\n  storage,\n  blacklist: ['filter'],\n};\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nconst store = configureStore({\n  reducer: { contacts: persistReducer(contactsPersistConfig, contactsReducer) },\n  middleware,\n});\n\nconst persistor = persistStore(store);\n\nconst provider = { store, persistor };\n\nexport default provider;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport store from './redux/store';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={'LOADING...'} persistor={store.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__2QQ1X\",\"input\":\"Form_input__1tFrb\",\"button\":\"Form_button__3-eBo\"};"],"sourceRoot":""}